# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json

services:
    # core:
    #     build:
    #         context: .
    #         args:
    #             - PACKAGE=core
    #             # playwright does not work with alpine
    #             - BASE_IMAGE=slim
    #         target: test-setup
    #     image: core-test-setup:${SHA:-latest}
    #     container_name: core
    #     env_file:
    #         - path: ./.env.docker-compose
    #           required: false
    #     environment:
    #         #s non secret
    #         - ASSETS_BUCKET_NAME=assets.byron.pubpub.org
    #         - MAILGUN_SMTP_HOST=smtp.mailgun.org
    #         - MAILGUN_SMTP_PORT=465
    #         - MAILGUN_SMTP_USERNAME=omitted
    #         - OTEL_SERVICE_NAME=core.core
    #         - PGDATABASE=postgres
    #         - PGHOST=db
    #         - PGPORT=5432
    #         - PGUSER=postgres
    #         - PGPASSWORD=postgres
    #         - PUBPUB_URL=http://integration-tests:3000
    #         - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    #         - SKIP_VALIDATION=true
    #         - CACHE_LOG=true
    #         - LOG_LEVEL=debug
    #         - CI=true
    #         - INTEGRATION_TEST_HOST=integration-tests
    #     networks:
    #         - app-network
    #     ports:
    #         - "30000:3000"
    #     depends_on:
    #         - db
    #         - jobs
    #         - inbucket
    #     profiles:
    #         - test
    #         - integration
    #     command: >
    #         sh -c "pnpm --filter core run migrate-dev" && \
    #         sh -c "pnpm --filter core run test-run"

    # jobs:
    #     build:
    #         context: .
    #         args:
    #             - PACKAGE=jobs
    #             # same as the above, improves caching
    #             - BASE_IMAGE=slim
    #         target: test-setup
    #     container_name: jobs
    #     image: core-test-setup:${SHA:-latest}
    #     env_file:
    #         - path: ./.env.docker-compose
    #           required: false
    #     environment:
    #         - OTEL_SERVICE_NAME=jobs.jobs
    #         - PGDATABASE=postgres
    #         - PGHOST=db
    #         - PGPORT=5432
    #         - PGUSER=postgres
    #         - PGPASSWORD=postgres
    #         - PUBPUB_URL=http://localhost:8080
    #     networks:
    #         - app-network
    #     depends_on:
    #         - db
    #     profiles:
    #         - integration
    #         - test

    db:
        extends:
            file: ./docker-compose.base.yml
            service: db
        volumes:
            - postgres_test_data:/var/lib/postgresql/data
        networks:
            - app-network
        profiles:
            - test
            - integration
        ports:
            - "5432:5432"

    inbucket:
        extends:
            file: ./docker-compose.base.yml
            service: inbucket
        networks:
            - app-network
        profiles:
            - test
            - integration

    integration-tests:
        environment:
            - ASSETS_BUCKET_NAME=assets.byron.pubpub.org
            - MAILGUN_SMTP_HOST=smtp.mailgun.org
            - MAILGUN_SMTP_PORT=465
            - MAILGUN_SMTP_USERNAME=omitted
            - OTEL_SERVICE_NAME=core.core
            - PGDATABASE=postgres
            - PGHOST=db
            - PGPORT=5432
            - PGUSER=postgres
            - PGPASSWORD=postgres
            - PUBPUB_URL=http://localhost:3000
            - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
            - API_KEY=xxx
            - ASSETS_REGION=us-east-1
            - ASSETS_UPLOAD_KEY=xxx
            - ASSETS_UPLOAD_SECRET_KEY=xxx
            - JWT_SECRET=xxx
            - MAILGUN_SMTP_PASSWORD=xxx
        depends_on:
            - db
            - inbucket
        # TODO: remove this backup image
        # image: ${INTEGRATION_TESTS_IMAGE:-246372085946.dkr.ecr.us-east-1.amazonaws.com/pubpub-v7-core:9d706485e22da100437475716a909f48742e0c16}
        image: core:latest
        profiles:
            - integration
        ports:
            - 3000:3000
        networks:
            - app-network

volumes:
    postgres_test_data:
        driver: local

networks:
    app-network:
