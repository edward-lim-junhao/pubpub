// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { memberGroupsIdSchema, type MemberGroupsId } from './MemberGroups';
import { usersIdSchema, type UsersId } from './Users';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

/** Represents the table public._MemberGroupToUser */
export default interface MemberGroupToUserTable {
  A: ColumnType<MemberGroupsId, MemberGroupsId, MemberGroupsId>;

  B: ColumnType<UsersId, UsersId, UsersId>;
}

export type MemberGroupToUser = Selectable<MemberGroupToUserTable>;

export type NewMemberGroupToUser = Insertable<MemberGroupToUserTable>;

export type MemberGroupToUserUpdate = Updateable<MemberGroupToUserTable>;

export const memberGroupToUserSchema = z.object({
  A: memberGroupsIdSchema,
  B: usersIdSchema,
}) as z.ZodObject<{[K in keyof MemberGroupToUser]: z.Schema<MemberGroupToUser[K]>}>;

export const memberGroupToUserInitializerSchema = z.object({
  A: memberGroupsIdSchema,
  B: usersIdSchema,
}) as z.ZodObject<{[K in keyof NewMemberGroupToUser]: z.Schema<NewMemberGroupToUser[K]>}>;

export const memberGroupToUserMutatorSchema = z.object({
  A: memberGroupsIdSchema.optional(),
  B: usersIdSchema.optional(),
}) as z.ZodObject<{[K in keyof MemberGroupToUserUpdate]: z.Schema<MemberGroupToUserUpdate[K]>}>;
