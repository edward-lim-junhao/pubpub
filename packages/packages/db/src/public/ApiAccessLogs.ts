// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { apiAccessTokensIdSchema, type ApiAccessTokensId } from './ApiAccessTokens';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

/** Identifier type for public.api_access_logs */
export type ApiAccessLogsId = string & { __brand: 'ApiAccessLogsId' };

/** Represents the table public.api_access_logs */
export default interface ApiAccessLogsTable {
  id: ColumnType<ApiAccessLogsId, ApiAccessLogsId | undefined, ApiAccessLogsId>;

  accessTokenId: ColumnType<ApiAccessTokensId, ApiAccessTokensId, ApiAccessTokensId>;

  timestamp: ColumnType<Date, Date | string | undefined, Date | string>;

  action: ColumnType<string, string, string>;
}

export type ApiAccessLogs = Selectable<ApiAccessLogsTable>;

export type NewApiAccessLogs = Insertable<ApiAccessLogsTable>;

export type ApiAccessLogsUpdate = Updateable<ApiAccessLogsTable>;

export const apiAccessLogsIdSchema = z.string().uuid() as unknown as z.Schema<ApiAccessLogsId>;

export const apiAccessLogsSchema = z.object({
  id: apiAccessLogsIdSchema,
  accessTokenId: apiAccessTokensIdSchema,
  timestamp: z.date(),
  action: z.string(),
}) as z.ZodObject<{[K in keyof ApiAccessLogs]: z.Schema<ApiAccessLogs[K]>}>;

export const apiAccessLogsInitializerSchema = z.object({
  id: apiAccessLogsIdSchema.optional(),
  accessTokenId: apiAccessTokensIdSchema,
  timestamp: z.date().optional(),
  action: z.string(),
}) as z.ZodObject<{[K in keyof NewApiAccessLogs]: z.Schema<NewApiAccessLogs[K]>}>;

export const apiAccessLogsMutatorSchema = z.object({
  id: apiAccessLogsIdSchema.optional(),
  accessTokenId: apiAccessTokensIdSchema.optional(),
  timestamp: z.date().optional(),
  action: z.string().optional(),
}) as z.ZodObject<{[K in keyof ApiAccessLogsUpdate]: z.Schema<ApiAccessLogsUpdate[K]>}>;
