{
	"name": "db",
	"private": true,
	"version": "0.0.0",
	"description": "",
	"files": [
		"dist",
		"Database",
		"public/Action",
		"public/ActionClaim",
		"public/ActionInstances",
		"public/ActionMove",
		"public/ActionRunStatus",
		"public/ActionRuns",
		"public/ApiAccessLogs",
		"public/ApiAccessPermissions",
		"public/ApiAccessTokens",
		"public/ApiAccessScope",
		"public/ApiAccessType",
		"public/AuthTokens",
		"public/Communities",
		"public/Event",
		"public/FormInputs",
		"public/Forms",
		"public/IntegrationInstanceState",
		"public/IntegrationInstanceToPub",
		"public/IntegrationInstances",
		"public/Integrations",
		"public/MemberGroupToUser",
		"public/MemberGroups",
		"public/Members",
		"public/MoveConstraint",
		"public/PermissionToPub",
		"public/PermissionToStage",
		"public/Permissions",
		"public/PrismaMigrations",
		"public/PubFieldSchema",
		"public/PubFieldToPubType",
		"public/PubFields",
		"public/PubTypes",
		"public/PubValues",
		"public/PublicSchema",
		"public/Pubs",
		"public/PubsInStages",
		"public/Rules",
		"public/Stages",
		"public/Users",
		"types"
	],
	"scripts": {
		"format": "prettier --check . --ignore-path ../../.gitignore",
		"type-check": "tsc --noEmit",
		"generate-db-table-names": "dotenv -e .env.local -e .env.development tsx ./scripts/generateDbTableNames.ts ./src/table-names.ts public | pino-pretty",
		"make-kysely-types": "dotenv -e .env.local -e .env.development kanel --config ./src/kanel/.kanelrc.js && pnpm generate-db-table-names && prettier -w ./src/table-names.ts",
		"migrate-dev": "dotenv -e .env.local -e .env.development prisma migrate dev && pnpm make-kysely-types",
		"migrate-deploy": "dotenv -e .env.local -e .env.development prisma migrate deploy",
		"migrate-diff": "dotenv -e .env.local -e .env.development prisma migrate diff",
		"migrate-docker": "dotenv -e .env.docker -- prisma migrate deploy",
		"prisma": "dotenv -e .env.local -e .env.development prisma",
		"prisma-studio": "dotenv -e .env.local -e .env.development prisma studio"
	},
	"author": "public/Knowledge Futures, Inc <hello@knowledgefutures.org>",
	"license": "public/GPL-2.0+",
	"dependencies": {
		"@prisma/client": "5.2.0",
		"logger": "workspace:*",
		"utils": "workspace:*"
	},
	"peerDependencies": {
		"@ts-rest/core": "^3.45.2",
		"kysely": "^0.27.2",
		"zod": "^3.22.4"
	},
	"devDependencies": {
		"@prisma/generator-helper": "^5.14.0",
		"@prisma/internals": "^5.14.0",
		"@pubpub/prettier-config": "workspace:*",
		"@ts-rest/core": "^3.45.2",
		"@types/pg": "^8.11.6",
		"dotenv-cli": "^7.2.1",
		"kanel": "^3.8.2",
		"kanel-kysely": "^0.4.0",
		"kanel-zod": "^1.3.4",
		"pg": "^8.11.3",
		"prisma": "^5.2.0",
		"tsconfig": "workspace:*",
		"tsx": "^3.13.0",
		"typescript": "^5.4.2",
		"zod": "^3.22.4"
	},
	"prettier": "@pubpub/prettier-config",
	"preconstruct": {
		"entrypoints": [
			"./Database.ts",
			"./public/Action.ts",
			"./public/ActionClaim.ts",
			"./public/ActionInstances.ts",
			"./public/ActionMove.ts",
			"./public/ActionRunStatus.ts",
			"./public/ActionRuns.ts",
			"./public/ApiAccessLogs.ts",
			"./public/ApiAccessPermissions.ts",
			"./public/ApiAccessTokens.ts",
			"./public/ApiAccessScope.ts",
			"./public/ApiAccessType.ts",
			"./public/AuthTokens.ts",
			"./public/Communities.ts",
			"./public/Event.ts",
			"./public/FormInputs.ts",
			"./public/Forms.ts",
			"./public/IntegrationInstanceState.ts",
			"./public/IntegrationInstanceToPub.ts",
			"./public/IntegrationInstances.ts",
			"./public/Integrations.ts",
			"./public/MemberGroupToUser.ts",
			"./public/MemberGroups.ts",
			"./public/Members.ts",
			"./public/MoveConstraint.ts",
			"./public/PermissionToPub.ts",
			"./public/PermissionToStage.ts",
			"./public/Permissions.ts",
			"./public/PrismaMigrations.ts",
			"./public/PubFieldSchema.ts",
			"./public/PubFieldToPubType.ts",
			"./public/PubFields.ts",
			"./public/PubTypes.ts",
			"./public/PubValues.ts",
			"./public/PublicSchema.ts",
			"./public/Pubs.ts",
			"./public/PubsInStages.ts",
			"./public/Rules.ts",
			"./public/Stages.ts",
			"./public/Users.ts",
			"./types/index.ts"
		]
	},
	"prisma": {
		"schema": "./src/prisma/schema.prisma"
	}
}
